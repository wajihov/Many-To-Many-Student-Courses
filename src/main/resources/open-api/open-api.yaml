openapi: 3.0.2
info:
  title: Many-To-Many Student-Courses
  version: 1.0.0
  description: RelationShip Many To Mayn
paths:
  /students:
    get:
      tags:
        - student
      parameters:
        -
          name: name
          description: ''
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDto'
          description: Find all students in the Base
      operationId: findStudents
      summary: Get all students
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDto'
        required: true
      tags:
        - student
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDto'
          description: A new student is added successfully
      operationId: createStudent
      summary: Add a new student
  '/students/{id}':
    get:
      tags:
        - student
      parameters:
        -
          name: id
          description: A unique identifier for a `student Dto`.
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDto'
          description: Search student with id
        '404':
          description: Student not found
      operationId: findStudentById
      summary: find a student by id
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDto'
        required: true
      tags:
        - student
      parameters:
        -
          name: id
          description: A unique identifier for a `student Dto`.
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDto'
          description: the student is successfully changed
      operationId: updateStudent
      summary: Update student
    delete:
      tags:
        - student
      parameters:
        -
          name: id
          description: A unique identifier for a `student Dto`.
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          description: the student is successfully deleted
      operationId: deleteStudent
      summary: delete student
    parameters:
      -
        name: id
        description: A unique identifier for a `student Dto`.
        schema:
          format: int64
          type: integer
        in: path
        required: true
  /courses:
    get:
      tags:
        - course
      parameters:
        -
          name: name
          description: ''
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoursesDto'
          description: all courses in database
      operationId: allCourses
      summary: All courses in the database
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesDto'
        required: true
      tags:
        - course
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesDto'
          description: Created a new Course
      operationId: createCourse
      summary: Create a new Course
  '/courses/{id}':
    get:
      tags:
        - course
      parameters:
        -
          name: id
          description: A unique identifier for a `courses Dto`.
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesDto'
          description: 'Find course by id '
        '404':
          description: 'Course not found '
      operationId: findCourseById
      summary: get course by id
      description: A unique identifier for a `CoursesDto`.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesDto'
        required: true
      tags:
        - course
      parameters:
        -
          name: id
          description: A unique identifier for a `courses Dto`.
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesDto'
          description: The course has been successfully modified
      summary: Modify course
    delete:
      tags:
        - course
      parameters:
        -
          name: id
          description: A unique identifier for a `courses Dto`.
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          description: The course was successfully deleted
      operationId: deleteCourse
      summary: Delete course
    parameters:
      -
        name: id
        description: A unique identifier for a `courses Dto`.
        schema:
          format: int64
          type: integer
        in: path
        required: true
components:
  schemas:
    CoursesDto:
      description: Course Dto
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          format: int64
          type: integer
    StudentDto:
      description: Student Dto
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        lastname:
          type: string
        email:
          type: string
        grade:
          type: string
        date_birth:
          type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/CoursesDto'
